import type { NextPage } from "next";
import Head from "next/head";
import FeedCard from "../components/feedCard";
import useSWR from "swr";
import { Kudo } from "@slashkudos/kudos-api";
import { PropsWithChildren, useState } from "react";
import HeaderSection from "../components/headerSection";
import UserSearchButton from "../components/userSearchButton";
import { SearchKudosByUserResponse } from "./api/kudos/search";

interface Props extends PropsWithChildren<{}> {}

const Feed: NextPage<Props> = () => {
  const [dataState, setData] = useState(undefined as Kudo[] | undefined);
  const [searchMessageState, setSearchMessage] = useState(
    undefined as string | undefined
  );

  const { data, error } = useSWR<Kudo[], any>("/api/kudos", (url: string) =>
    fetch(url).then(async (res) => {
      const result = (await res.json()) as Kudo[];
      setData(result);
      return result;
    })
  );
  const originalData = data;

  const updateData = (
    searchValue?: string,
    searchResponse?: SearchKudosByUserResponse
  ): void => {
    setSearchMessage(undefined);
    if (!searchValue) setData(originalData);
    if (!searchResponse || searchResponse.error) {
      return setSearchMessage("There was an error searching for kudos.");
    }
    setData(searchResponse.result);
    if (searchResponse.result?.length === 0) {
      setSearchMessage("No kudos found.");
    }
  };

  if (error) return <div>Failed to load</div>;
  if (!dataState) return <div>Loading...</div>;

  return (
    <>
      <Head>
        <title>slashkudos</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <HeaderSection title="Recent kudos" />
      <UserSearchButton onSearchEventHandler={updateData}></UserSearchButton>
      <div className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        {dataState.map((kudo, i) => (
          <FeedCard key={i} kudo={kudo}></FeedCard>
        ))}
        {searchMessageState}
      </div>
    </>
  );
};

export default Feed;
